<Window x:Class="AppCommander.W7_11.WPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="AppCommander - Enhanced UI Automation Tool" 
        Height="800" Width="1200" 
        MinHeight="600" MinWidth="900"
        Icon="appcommander_icon.ico"
        WindowStartupLocation="CenterScreen">

    <Window.Resources>
        <!-- Styles -->
        <Style x:Key="GroupBoxStyle" TargetType="GroupBox">
            <Setter Property="BorderBrush" Value="#FF0078D4"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
        </Style>

        <Style x:Key="PrimaryButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="#FF0078D4"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="MinWidth" Value="100"/>
            <Setter Property="MinHeight" Value="30"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FF106EBE"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="#FFCCCCCC"/>
                    <Setter Property="Foreground" Value="#FF666666"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="SecondaryButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="#FFF3F2F1"/>
            <Setter Property="Foreground" Value="#FF323130"/>
            <Setter Property="BorderBrush" Value="#FF605E5C"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="MinWidth" Value="80"/>
            <Setter Property="MinHeight" Value="30"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FFE1DFDD"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="#FFCCCCCC"/>
                    <Setter Property="Foreground" Value="#FF666666"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="StatusLabelStyle" TargetType="Label">
            <Setter Property="FontSize" Value="10"/>
            <Setter Property="Padding" Value="2"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- Menu Bar -->
        <Menu Grid.Row="0" Background="#FFF3F2F1">
            <MenuItem Header="_File">
                <MenuItem Header="_New Sequence" Click="NewSequence_Click" InputGestureText="Ctrl+N"/>
                <MenuItem Header="_Open Sequence..." Click="OpenSequence_Click" InputGestureText="Ctrl+O"/>
                <Separator/>
                <MenuItem Header="_Save Sequence" Click="SaveSequence_Click" InputGestureText="Ctrl+S"/>
                <MenuItem Header="Save Sequence _As..." Click="SaveSequenceAs_Click" InputGestureText="Ctrl+Shift+S"/>
                <Separator/>
                <MenuItem Header="E_xit" Click="Exit_Click" InputGestureText="Alt+F4"/>
            </MenuItem>

            <MenuItem Header="_Commands">
                <MenuItem Header="Add _Wait Command..." Click="AddWaitCommand_Click"/>
                <MenuItem Header="Add _Loop Start" Click="AddLoopStart_Click"/>
                <MenuItem Header="Add Loop _End" Click="AddLoopEnd_Click"/>
                <Separator/>
                <MenuItem Header="_Edit Selected Command..." Click="EditCommand_Click"/>
                <MenuItem Header="_Delete Selected Command" Click="DeleteCommand_Click"/>
                <Separator/>
                <MenuItem Header="_Clear Log" Click="ClearLog_Click"/>
            </MenuItem>

            <MenuItem Header="_Tools">
                <MenuItem Header="_Window Selector" Click="WindowSelector_Click"/>
                <MenuItem Header="_Element Inspector" Click="ElementInspector_Click"/>
                <Separator/>
                <MenuItem Header="_Test Playback" Click="TestPlayback_Click"/>
                <MenuItem Header="_Debug Coordinates" Click="DebugCoordinates_Click"/>
                <MenuItem Header="_Settings" Click="Settings_Click"/>
            </MenuItem>

            <MenuItem Header="_Debug">
                <MenuItem Header="_Export Auto-Detected Data..." Click="ExportAutoDetectedData_Click"/>
                <MenuItem Header="_Export Debug Info" Click="ExportSequenceForDebug_Click"/>
                <MenuItem Header="_Play Direct (No Search)" Click="PlayWithoutElementSearch_Click"/>
            </MenuItem>

            <MenuItem Header="_Help">
                <MenuItem Header="_User Guide" Click="UserGuide_Click"/>
                <MenuItem Header="_About" Click="About_Click"/>
            </MenuItem>
        </Menu>

        <!-- Main Control Panel -->
        <StackPanel Grid.Row="1" Margin="5">
            <GroupBox Header="Control Panel" Style="{StaticResource GroupBoxStyle}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <!-- Recording Controls -->
                    <StackPanel Grid.Column="0" Orientation="Horizontal" HorizontalAlignment="Left">
                        <Button Name="btnSelectTarget" Content="🎯 Select Target" 
                                Style="{StaticResource SecondaryButtonStyle}" 
                                Click="SelectTarget_Click" Margin="0,0,10,0"/>
                        <Button Name="btnStartRecording" Content="🔴 Start Recording" 
                                Style="{StaticResource PrimaryButtonStyle}" 
                                Click="StartRecording_Click" Margin="0,0,10,0"/>
                        <Button Name="btnStopRecording" Content="⏹ Stop" 
                                Style="{StaticResource SecondaryButtonStyle}" 
                                Click="StopRecording_Click" Margin="0,0,10,0" IsEnabled="False"/>
                        <Button Name="btnPauseRecording" Content="⏸ Pause" 
                                Style="{StaticResource SecondaryButtonStyle}" 
                                Click="PauseRecording_Click" Margin="0,0,10,0" IsEnabled="False"/>
                    </StackPanel>

                    <!-- Repeat Logic Panel -->
                    <StackPanel Grid.Column="1" Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <TextBlock Text="Repeat Settings" FontWeight="Bold" HorizontalAlignment="Center" FontSize="10" Margin="0,0,0,5"/>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                            <TextBlock Text="Count:" VerticalAlignment="Center" Margin="0,0,5,0" FontSize="10"/>
                            <TextBox Name="txtRepeatCount" Text="1" Width="40" Height="20" 
                                     VerticalAlignment="Center" HorizontalContentAlignment="Center"
                                     ToolTip="Number of times to repeat the sequence (1-999)"/>
                            <CheckBox Name="chkInfiniteLoop" Content="∞" VerticalAlignment="Center" 
                                      Margin="5,0,0,0" ToolTip="Infinite loop (Ctrl+Stop to break)"
                                      Checked="InfiniteLoop_Checked" Unchecked="InfiniteLoop_Unchecked"/>
                        </StackPanel>
                    </StackPanel>

                    <!-- Playback Controls -->
                    <StackPanel Grid.Column="2" Orientation="Horizontal" HorizontalAlignment="Right">
                        <Button Name="btnPlay" Content="▶ Play" 
                                Style="{StaticResource PrimaryButtonStyle}" 
                                Click="PlaySequence_Click" Margin="0,0,10,0"/>
                        <Button Name="btnPause" Content="⏸ Pause" 
                                Style="{StaticResource SecondaryButtonStyle}" 
                                Click="PausePlayback_Click" Margin="0,0,10,0" IsEnabled="False"/>
                        <Button Name="btnStop" Content="⏹ Stop" 
                                Style="{StaticResource SecondaryButtonStyle}" 
                                Click="StopPlayback_Click" IsEnabled="False"/>
                    </StackPanel>
                </Grid>
            </GroupBox>
        </StackPanel>

        <!-- Enhanced Recording Panel -->
        <StackPanel Grid.Row="2" Margin="5">
            <GroupBox Header="Enhanced Recording &amp; Auto-Detection" Style="{StaticResource GroupBoxStyle}">
                <StackPanel>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <!-- Enhanced Controls -->
                        <StackPanel Grid.Column="0" Orientation="Horizontal">
                            <Button Name="btnStartEnhancedRecording" Content="🤖 Enhanced Recording" 
                                    Click="StartEnhancedRecordingWithAutoDetection_Click" 
                                    Style="{StaticResource PrimaryButtonStyle}" Margin="0,0,5,0"/>
                            <Button Name="btnAutoRefreshElements" Content="🔄 Refresh UI" 
                                    Click="AutoRefreshAllUIElements_Click" 
                                    Style="{StaticResource SecondaryButtonStyle}" Margin="0,0,5,0"/>
                        </StackPanel>

                        <!-- Auto Mode Controls -->
                        <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Center">
                            <Button Name="btnToggleAutoMode" Content="🎯 Auto Mode" 
                                    Click="ToggleAutomaticMode_Click" 
                                    Style="{StaticResource SecondaryButtonStyle}" Margin="0,0,5,0"/>
                            <Button Name="btnShowSystemStatus" Content="📊 Status" 
                                    Click="ShowAutomaticSystemStatus_Click" 
                                    Style="{StaticResource SecondaryButtonStyle}"/>
                        </StackPanel>

                        <!-- Status Indicators -->
                        <StackPanel Grid.Column="2" HorizontalAlignment="Right">
                            <Label Name="lblAutoDetectionStatus" Content="🔴 Auto-Detection Inactive" 
                                   Style="{StaticResource StatusLabelStyle}"/>
                            <Label Name="lblUIRecordingStatus" Content="🔴 UI Scanning Inactive" 
                                   Style="{StaticResource StatusLabelStyle}"/>
                        </StackPanel>
                    </Grid>

                    <ProgressBar Name="progressEnhancedRecording" Height="4" 
                                 IsIndeterminate="False" Visibility="Collapsed" Margin="0,5,0,0"/>
                </StackPanel>
            </GroupBox>
        </StackPanel>

        <!-- Main Content Area -->
        <Grid Grid.Row="3" Margin="5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="5"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <!-- Commands Panel -->
            <GroupBox Grid.Column="0" Header="Recorded Commands" Style="{StaticResource GroupBoxStyle}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <!-- Commands DataGrid -->
                    <DataGrid Name="dgCommands" Grid.Row="0" AutoGenerateColumns="False" 
                              GridLinesVisibility="Horizontal" AlternatingRowBackground="#FFF8F8F8"
                              HeadersVisibility="Column" CanUserSortColumns="True">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="#" Binding="{Binding StepNumber}" Width="40" IsReadOnly="True"/>
                            <DataGridTextColumn Header="Element" Binding="{Binding ElementName}" Width="120" IsReadOnly="True"/>
                            <DataGridTextColumn Header="Action" Binding="{Binding Type}" Width="80" IsReadOnly="True"/>
                            <DataGridTextColumn Header="Value" Binding="{Binding Value}" Width="100" IsReadOnly="True"/>
                            <DataGridTextColumn Header="X" Binding="{Binding ElementX}" Width="50" IsReadOnly="True"/>
                            <DataGridTextColumn Header="Y" Binding="{Binding ElementY}" Width="50" IsReadOnly="True"/>
                            <DataGridTextColumn Header="Target" Binding="{Binding TargetProcess}" Width="80" IsReadOnly="True"/>
                            <DataGridTextColumn Header="Time" Binding="{Binding Timestamp, StringFormat='HH:mm:ss'}" Width="70" IsReadOnly="True"/>
                        </DataGrid.Columns>
                    </DataGrid>

                    <!-- Commands Toolbar -->
                    <StackPanel Grid.Row="1" Orientation="Horizontal" Margin="0,5,0,0">
                        <Button Content="📝 Edit" Click="EditCommand_Click" 
                                Style="{StaticResource SecondaryButtonStyle}" Margin="0,0,5,0"/>
                        <Button Content="🗑 Delete" Click="DeleteCommand_Click" 
                                Style="{StaticResource SecondaryButtonStyle}" Margin="0,0,5,0"/>
                        <Button Content="▶ Test" Click="TestPlayback_Click" 
                                Style="{StaticResource SecondaryButtonStyle}" Margin="0,0,10,0"/>
                        <TextBlock Text="|" VerticalAlignment="Center" Margin="0,0,10,0" Foreground="Gray"/>
                        <TextBlock Name="txtCommandCount" Text="0 commands" VerticalAlignment="Center" FontSize="10" Foreground="Gray"/>
                    </StackPanel>
                </Grid>
            </GroupBox>

            <!-- Splitter -->
            <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Stretch" Background="#FFCCCCCC"/>

            <!-- Side Panel -->
            <StackPanel Grid.Column="2">
                <!-- Target Information -->
                <GroupBox Header="Target Information" Style="{StaticResource GroupBoxStyle}">
                    <StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="0,0,0,5">
                            <TextBlock Text="Window:" FontWeight="Bold" Width="60" FontSize="10"/>
                            <Label Name="lblTargetWindow" Content="No target selected" 
                                   FontSize="10" Foreground="Gray" Padding="0"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="0,0,0,5">
                            <TextBlock Text="Process:" FontWeight="Bold" Width="60" FontSize="10"/>
                            <TextBox Name="txtTargetProcess" Text="" 
                                     FontSize="10" Foreground="Gray" Background="Transparent" 
                                     BorderThickness="0" IsReadOnly="True"/>
                        </StackPanel>
                        <Button Content="🎯 Select New Target" Click="SelectTarget_Click" 
                                Style="{StaticResource SecondaryButtonStyle}" 
                                HorizontalAlignment="Stretch" Margin="0,5,0,0"/>
                    </StackPanel>
                </GroupBox>

                <!-- Element Statistics -->
                <GroupBox Header="Element Statistics" Style="{StaticResource GroupBoxStyle}">
                    <StackPanel>
                        <ListBox Name="lstElementStats" Height="150" FontSize="10">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel>
                                        <TextBlock Text="{Binding ElementName}" FontWeight="Bold"/>
                                        <TextBlock Text="{Binding UsageCount, StringFormat='Used: {0} times'}" FontSize="9" Foreground="Gray"/>
                                    </StackPanel>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                        <Button Content="🔄 Refresh Stats" Click="AutoRefreshAllUIElements_Click" 
                                Style="{StaticResource SecondaryButtonStyle}" 
                                HorizontalAlignment="Stretch" Margin="0,5,0,0"/>
                    </StackPanel>
                </GroupBox>

                <!-- Quick Actions -->
                <GroupBox Header="Quick Actions" Style="{StaticResource GroupBoxStyle}">
                    <StackPanel>
                        <Button Content="🔍 Element Inspector" Click="ElementInspector_Click" 
                                Style="{StaticResource SecondaryButtonStyle}" 
                                HorizontalAlignment="Stretch" Margin="0,0,0,5"/>
                        <Button Content="🏃 Play Direct" Click="PlayWithoutElementSearch_Click" 
                                Style="{StaticResource SecondaryButtonStyle}" 
                                HorizontalAlignment="Stretch" Margin="0,0,0,5"/>
                        <Button Content="📊 Debug Info" Click="ExportSequenceForDebug_Click" 
                                Style="{StaticResource SecondaryButtonStyle}" 
                                HorizontalAlignment="Stretch" Margin="0,0,0,5"/>
                        <Button Content="⚙ Settings" Click="Settings_Click" 
                                Style="{StaticResource SecondaryButtonStyle}" 
                                HorizontalAlignment="Stretch"/>
                    </StackPanel>
                </GroupBox>
            </StackPanel>
        </Grid>

        <!-- Status Bar -->
        <StatusBar Grid.Row="4" Background="#FFF3F2F1" Height="30">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>

            <StatusBarItem Grid.Column="0">
                <TextBlock Name="txtStatus" Text="Ready" FontWeight="Bold" 
                           Foreground="#FF0078D4" FontSize="12"/>
            </StatusBarItem>

            <Separator Grid.Column="1"/>

            <StatusBarItem Grid.Column="2">
                <TextBlock Name="txtTarget" Text="No target selected" 
                           FontSize="10" Foreground="Gray"/>
            </StatusBarItem>

            <StatusBarItem Grid.Column="3">
                <TextBlock Name="txtSequenceInfo" Text="Ready to record" 
                           FontSize="10" Foreground="Gray"/>
            </StatusBarItem>
        </StatusBar>
    </Grid>
</Window>