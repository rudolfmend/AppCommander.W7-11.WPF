<Window
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:av="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    mc:Ignorable="av" 
    x:Class="AppCommander.W7_11.WPF.MainWindow"
    Title="AppCommander" 
    MinHeight="500" MinWidth="400"
    Icon="appcommander_icon.ico"
    WindowStartupLocation="CenterScreen" 
    FontSize="14" 
    FontFamily="Segoe UI"
    Background="{DynamicResource WindowBackgroundBrush}">

    <Window.Resources>
        <Style x:Key="FloatingToggleButton" TargetType="ToggleButton">
            <Setter Property="Width" Value="50"/>
            <Setter Property="Height" Value="50"/>
            <Setter Property="Background" Value="#FF2196F3"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>

            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="VerticalAlignment" Value="Bottom"/>
            <Setter Property="Margin" Value="20"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Color="Black" BlurRadius="12" Opacity="0.5" ShadowDepth="4"/>
                </Setter.Value>
            </Setter>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border x:Name="border"
                            CornerRadius="25"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>

                        <ControlTemplate.Triggers>
                            <!-- Hover efekt -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Effect">
                                    <Setter.Value>
                                        <DropShadowEffect Color="Black" BlurRadius="18" Opacity="0.6" ShadowDepth="6"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="border" Property="Background" Value="#FF42A5F5"/>
                            </Trigger>

                            <!-- Zapnutý (IsChecked=True) -->
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#FFFF9800"/>
                                <Setter Property="Content" Value="»"/>
                            </Trigger>

                            <!-- Deaktivovaný -->
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border" Property="Opacity" Value="0.4"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>


    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- ====================================================================== -->
        <!-- Menu Bar -->
        <Border Grid.Row="0" BorderThickness="0,0,0,1">

            <Menu x:Name="AppCommander_MenuBar" AutomationProperties.Name="Main Menu" Background="Transparent" Padding="8" Margin="1,0,-1,0">
                <MenuItem Header="_File" Foreground="{DynamicResource PrimaryTextBrush}" Style="{DynamicResource TopLevelMenuItem}">
                    <MenuItem Header="_New Sequence" Click="NewSequence_Click" InputGestureText="Ctrl+N" Style="{DynamicResource MenuItemStyle}" />
                    <MenuItem Header="_Open Sequence..." Click="OpenSequence_Click" InputGestureText="Ctrl+O" Style="{DynamicResource MenuItemStyle}" />
                    <Separator Margin="-20,4,10,4"/>
                    <MenuItem Header="_Save Sequence" Click="SaveSequence_Click" InputGestureText="Ctrl+S" Style="{DynamicResource MenuItemStyle}" />
                    <MenuItem Header="Save Sequence _As..." Click="SaveSequenceAs_Click" InputGestureText="Ctrl+Shift+S" Style="{DynamicResource MenuItemStyle}" />
                    <Separator Margin="-20,4,10,4"/>
                    <MenuItem Header="E_xit" Click="Exit_Click" InputGestureText="Alt+F4" Style="{DynamicResource MenuItemStyle}" />
                </MenuItem>

                <MenuItem Header="_Commands" AutomationProperties.Name="Commands" Foreground="{DynamicResource PrimaryTextBrush}" Style="{DynamicResource TopLevelMenuItem}">
                    <MenuItem Header="Add _Wait Command..." Click="AddWaitCommand_Click" Style="{DynamicResource MenuItemStyle}" />
                    <MenuItem Header="Add _Loop Start" Click="AddLoopStart_Click" Style="{DynamicResource MenuItemStyle}" />
                    <MenuItem Header="Add Loop _End" Click="AddLoopEnd_Click" Style="{DynamicResource MenuItemStyle}" />
                    <Separator Margin="-20,4,10,4"/>
                    <MenuItem Header="_Edit Selected Command..." Click="EditCommand_Click" Style="{DynamicResource MenuItemStyle}" />
                    <MenuItem Header="_Delete Selected Command" Click="DeleteCommand_Click" Style="{DynamicResource MenuItemStyle}" />
                </MenuItem>

                <MenuItem Header="_Tools" AutomationProperties.Name="Tools" Foreground="{DynamicResource PrimaryTextBrush}" Style="{DynamicResource TopLevelMenuItem}">
                    <MenuItem Header="_Window Selector" Click="WindowSelector_Click" Style="{DynamicResource MenuItemStyle}" />
                    <MenuItem Header="_Element Inspector" Click="ElementInspector_Click" Style="{DynamicResource MenuItemStyle}" />
                    <MenuItem Header="_Settings" Click="Settings_Click" Style="{DynamicResource MenuItemStyle}" />
                </MenuItem>

                <MenuItem Header="Th_emes" AutomationProperties.Name="Themes" Foreground="{DynamicResource PrimaryTextBrush}" Style="{DynamicResource TopLevelMenuItem}">
                    <MenuItem Header="System Default" IsCheckable="True" IsChecked="True" 
                    Click="ThemeMenuItem_Click" Tag="System" Style="{DynamicResource MenuItemStyle}" />
                    <Separator Margin="-20,4,10,4"/>
                    <MenuItem Header="Light Theme" AutomationProperties.Name="Light Theme" IsCheckable="True" 
                    Click="ThemeMenuItem_Click" Tag="Light" Style="{DynamicResource MenuItemStyle}"/>
                    <MenuItem Header="Dark Theme" AutomationProperties.Name="Dark Theme" IsCheckable="True" 
                    Click="ThemeMenuItem_Click" Tag="Dark" Style="{DynamicResource MenuItemStyle}"/>
                    <MenuItem Header="High Contrast" AutomationProperties.Name="High Contrast Theme" IsCheckable="True" 
                    Click="ThemeMenuItem_Click" Tag="HighContrast" Style="{DynamicResource MenuItemStyle}"/>
                </MenuItem>

                <MenuItem Header="_Help" AutomationProperties.Name="Help" Foreground="{DynamicResource PrimaryTextBrush}" Style="{DynamicResource TopLevelMenuItem}">
                    <MenuItem Header="_User Guide" Click="UserGuide_Click" Style="{DynamicResource MenuItemStyle}" />
                    <MenuItem Header="_About" Click="About_Click" Style="{DynamicResource MenuItemStyle}" />
                </MenuItem>
            </Menu>
        </Border>

        <!-- Toolbar -->

        <Border x:Name="TopBar" Grid.Row="1" Background="{DynamicResource PanelBackgroundBrush}" BorderBrush="{DynamicResource BorderBrush}" BorderThickness="0,0,0,1" Padding="16">
            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                <!-- Target Selection -->
                <StackPanel Orientation="Horizontal" Margin="0,0,24,0"
                        AutomationProperties.Name="Recording Controls">
                    <!--AutomationProperties.ControlType="Group"-->

                    <TextBlock Text="Main Content Area"
                    Visibility="Collapsed"
                    AutomationProperties.Name="Tool Bar Area"/>
                    <!--AutomationProperties.ControlType="Header"-->

                    <Button x:Name="AppCommander_AppCommander_BtnSelectTargetByClick" Content="🎯 Click to Select" 
                        Style="{DynamicResource PrimaryButton}" AutomationProperties.Name="Select Target by Click"
                        Click="SelectTargetByClick_Click" 
                        Margin="0,0,8,0" />


                </StackPanel>

                <Separator Margin="0,0,24,0" Style="{x:Null}" Background="#E1E1E1" Width="1"/>

                <!-- Recording Controls -->
                <StackPanel Orientation="Horizontal" Margin="0,0,0,0">
                    <Button x:Name="AppCommander_BtnRecording" Content="🔴 Start Recording" 
                        AutomationProperties.Name="Recording"
                        AutomationProperties.HelpText="Start recording"
                        AutomationProperties.AcceleratorKey="F9"
                        AutomationProperties.AutomationId="RecordButton"
                        Click="ToggleRecording_Click" 
                        Margin="0,0,8,0"
                        Style="{DynamicResource DangerButton}" />
                </StackPanel>

                <Separator Margin="0,0,24,0" Style="{x:Null}" Background="#E1E1E1" Width="1"/>

                <!-- Playback Controls -->
                <StackPanel Orientation="Horizontal">
                    <Button x:Name="AppCommander_BtnPlayCommands" Content="      ▶    Play        " 
                        Style="{DynamicResource PrimaryButton}" 
                        AutomationProperties.Name="Play commands" 
                        AutomationProperties.HelpText="Play commands"
                        AutomationProperties.AutomationId="PlayButton"
                        Click="PlaySequence_Click" Margin="0,0,4,0"/>

                    <StackPanel Orientation="Vertical">
                        <TextBlock Text="Repeat" VerticalAlignment="Center" Margin="12,0,8,0" AutomationProperties.Name="Repeat" 
                            FontWeight="SemiBold" Foreground="{DynamicResource PrimaryTextBrush}"/>
                        <TextBox x:Name="AppCommander_TxtRepeatCount" Text="1" AutomationProperties.Name="Repeat count" AutomationProperties.HelpText="Write the number of repetitions"
                                Style="{DynamicResource TextBoxStyle}"     
                                Width="50"  TextAlignment="Center" Margin="10,0,8,18"/>
                    </StackPanel>

                    <CheckBox x:Name="AppCommander_ChkInfiniteLoop" Content="∞" VerticalAlignment="Center" 
                            FontStretch="UltraExpanded"  FontWeight="ExtraBold"
                            AutomationProperties.Name="Infinite Loop" AutomationProperties.HelpText="Infinite Loop"
                            Checked="InfiniteLoop_Checked" Unchecked="InfiniteLoop_Unchecked" Margin="0,0,16,-3"/>

                    <Button x:Name="AppCommander_BtnPause" Content="⏸ Pause" 
                        Style="{DynamicResource SecondaryButton}" AutomationProperties.Name="Pause" AutomationProperties.HelpText="Pause the current execution"
                        Click="PausePlayback_Click"  Margin="0,0,4,0" IsEnabled="False"/>

                    <Button x:Name="AppCommander_BtnStop" Content="⏹ Stop" 
                        Style="{DynamicResource SecondaryButton}" AutomationProperties.Name="Stop" AutomationProperties.HelpText="Terminate the current execution"
                        Click="StopPlayback_Click"  IsEnabled="False"/>

                    <!-- Info TextBoxes -->
                    <StackPanel Orientation="Vertical" Margin="20,6,6,6">
                        <TextBlock x:Name="AppCommander_TxtSetCount" Text="0 sets" 
                        Foreground="{DynamicResource SecondaryTextBrush}" FontSize="12" />
                        <TextBlock x:Name="AppCommander_TxtSequenceCount" Text="0 sequences" 
                        Foreground="{DynamicResource SecondaryTextBrush}" FontSize="12"/>
                        <TextBlock x:Name="AppCommander_TxtCommandsCount" Text="0 commands" 
                        Foreground="{DynamicResource SecondaryTextBrush}" FontSize="12"/>
                    </StackPanel>
                </StackPanel>
            </StackPanel>

        </Border>

        <!-- Main Content -->
        <Grid Grid.Row="2" Margin="16">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/> 
                <ColumnDefinition Width="Auto"/> <!-- Pre toggle tlačidlo -->
                <ColumnDefinition Width="16"/> <!-- Medzera pred toggle tlačidloť -->
                <ColumnDefinition x:Name="SidePanelColumn" Width="320"/>
            </Grid.ColumnDefinitions>

            <!-- Commands Panel -->
            <ScrollViewer Grid.Column="0" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" 
                          Style="{DynamicResource ScrollViewerStyle}">
                <Border Style="{DynamicResource CardStyle}" >
                    <Grid Margin="16">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <!-- Header -->
                        <Grid Grid.Row="0" Margin="0,0,0,16">
                            <TextBlock Text="Recorded Commands" FontSize="18" FontWeight="SemiBold" AutomationProperties.Name="Recorded Commands"
                            Foreground="{DynamicResource PrimaryTextBrush}" VerticalAlignment="Center"/>
                        </Grid>

                        <!-- DataGrid -->

                        <DataGrid Grid.Row="1" x:Name="AppCommander_MainCommandTable" Style="{DynamicResource DataGridStyle}"
                            AutomationProperties.Name="Main command table"
                            AutomationProperties.HelpText="Main command table"
                                AlternationCount="2"
                        AutomationProperties.LabeledBy="{Binding ElementName=AppCommander_TxtCommandCount}"
                        AutomationProperties.ItemStatus="Command list loaded"
                        AutomationProperties.LiveSetting="Polite"
                        AutomationProperties.AutomationId="AppCommander_MainCommandTable"
                                  
                            AutoGenerateColumns="False"
                            MouseDoubleClick="AppCommander_MainCommandTable_MouseDoubleClick"
                            SelectionMode="Single"
                            CanUserAddRows="False"
                            CanUserDeleteRows="True" 
                            IsSynchronizedWithCurrentItem="False"
                            GridLinesVisibility="Vertical"
                            HeadersVisibility="All"
                            HorizontalAlignment="Left"
                            Margin="-1,0,1,10">

                            <DataGrid.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="📝 Edit Command" Click="ContextMenu_Edit_Click" FontWeight="SemiBold"/>
                                    <MenuItem Header="🗑️ Delete Command" Click="ContextMenu_Delete_Click"/>
                                    <Separator/>
                                    <MenuItem Header="📋 Open Sequence Editor" Click="OpenSequenceEditor_Click" FontWeight="Bold"/>
                                    <Separator/>
                                    <MenuItem Header="Edit Selected Commands Only" Click="OpenSequenceEditorForSelection_Click"/>
                                    <MenuItem Header="⚡ Quick Edit Value"  Click="QuickEditItem_Click"/>
                                    <Separator/>
                                    <MenuItem Header="📋 Copy Details" Click="ContextMenu_Copy_Click"/>
                                    <MenuItem Header="📄 Duplicate Command" Click="ContextMenu_Duplicate_Click"/>
                                    <Separator/>
                                    <MenuItem Header="⬆️ Move Up" Click="MoveUp_Click"/>
                                    <MenuItem Header="⬇️ Move Down" Click="MoveDown_Click"/>
                                    <Separator/>
                                    <MenuItem Header="↻ Refresh table" Click="RefreshWarnings_Click" />
                                </ContextMenu>
                            </DataGrid.ContextMenu>

                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Step" Binding="{Binding StepNumber}" Width="60" IsReadOnly="True" FontWeight="DemiBold"/>
                                <DataGridTextColumn Header="Type" Binding="{Binding TypeDisplay, Mode=OneWay}" Width="*" IsReadOnly="True"/>
                                <DataGridTextColumn Header="Name" Binding="{Binding Name}" Width="*" IsReadOnly="True"/>
                                <DataGridTextColumn Header="Action" Binding="{Binding Action}" Width="120" IsReadOnly="True"/>
                                <DataGridTextColumn Header="Value" Binding="{Binding Value}" Width="150" IsReadOnly="True"/>
                                <DataGridTextColumn Header="Repeat" Binding="{Binding RepeatCount}" Width="64" IsReadOnly="True"/>
                                <DataGridTextColumn Header="Status" Binding="{Binding Status}" Width="60" IsReadOnly="True"/>
                            </DataGrid.Columns>
                        </DataGrid>

                        <!-- Action Buttons -->
                        <StackPanel Grid.Row="2" Orientation="Horizontal" Margin="0,10,0,0">
                            <Button Content=" ✏ Edit   " Click="EditItem_Click" Margin="0,0,8,0" Style="{DynamicResource SecondaryButton}"/>
                            <Button Content="⬆ Move Up   " Click="MoveUp_Click" Margin="0,0,8,0" Style="{DynamicResource SecondaryButton}"/>
                            <Button Content="⬇ Move Down " Click="MoveDown_Click" Margin="0,0,8,0" Style="{DynamicResource SecondaryButton}"/>
                            <Button Content="➕ Add  Sequence" Click="AddSequence_Click" Margin="0,0,8,0" Style="{DynamicResource PrimaryButton}"/>
                            <Button Content="📁Add Cmd" Click="AddFromCommands_Click" Margin="0,0,8,0" Style="{DynamicResource SecondaryButton}"/>
                            <Button Content="💾 Save as Set" Click="SaveAsSet_Click" Margin="0,0,0,0" Style="{DynamicResource SecondaryButton}"/>
                        </StackPanel>
                    </Grid>
                </Border>
            </ScrollViewer>

            <!-- Medzera medzi hlavným obsahom a toggle tlačidlom -->
            <Border  Grid.Column="2"  Width="16" />

            <Button x:Name="AppCommander_BtnToggleSidePanel" 
        Grid.Column="3"
        Click="ToggleSidePanel_Click"
        Tag="collapsed"
        Width="18"
        BorderThickness="0"
        Cursor="Hand"
        VerticalAlignment="Stretch"
        HorizontalAlignment="Left"
        Padding="0"
        ToolTip="Show side panel">
                <Button.Template>
                    <ControlTemplate TargetType="Button">
                        <Grid x:Name="RootGrid">
                            <Border x:Name="RightBorder"
                        Width="18"
                        Height="{Binding ActualHeight, ElementName=RootGrid}"
                        Background="{DynamicResource SecondaryBrush}"
                        BorderBrush="{DynamicResource BorderBrush}"
                        BorderThickness="0,1,1,1"
                        CornerRadius="25,0,0,25"
                        VerticalAlignment="Stretch"/>

                            <!-- Ikona šípky -->
                            <Viewbox Width="20" Height="20" 
                         HorizontalAlignment="Center" 
                         VerticalAlignment="Center"
                         Margin="0,0,4,0">
                                <Canvas Width="24" Height="24">
                                    <Path x:Name="ToggleIconPath" 
                              Fill="{DynamicResource PrimaryTextBrush}"
                              Data="M15.41 16.59L10.83 12l4.58-4.59L14 6l-6 6 6 6 1.41-1.41z"/>
                                </Canvas>
                            </Viewbox>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <!-- Hover efekt - stredná farba -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="RightBorder" Property="Background" 
                            Value="{DynamicResource PrimaryBrush}"/>
                                <Setter TargetName="RightBorder" Property="BorderBrush" 
                            Value="{DynamicResource HoverBorderBrush}"/>
                                <Setter TargetName="ToggleIconPath" Property="Fill" 
                            Value="{DynamicResource AccentTextBrush}"/>
                            </Trigger>

                            <!-- Pressed efekt - tmavšia farba (AccentBrush je žltá v HighContrast) -->
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="RightBorder" Property="Background" 
                            Value="{DynamicResource AccentBrush}"/>
                                <Setter TargetName="RightBorder" Property="BorderBrush" 
                            Value="{DynamicResource AccentBrush}"/>
                                <Setter TargetName="ToggleIconPath" Property="Fill" 
                            Value="{DynamicResource Background}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Button.Template>
            </Button>

            <ScrollViewer x:Name="AppCommander_SidePanel" 
                    Grid.Column="4" 
                    VerticalScrollBarVisibility="Auto" 
                    HorizontalScrollBarVisibility="Disabled" 
                    Style="{DynamicResource ScrollViewerStyle}"
                    Visibility="Collapsed">

                <StackPanel>
                    <!-- Target Information Card -->
                    <Border Style="{DynamicResource CardStyle}" Margin="0,0,0,16">
                        <StackPanel Margin="16">
                            <TextBlock Text="Target Information" FontSize="16" FontWeight="SemiBold" AutomationProperties.Name="Target Information"
                            Foreground="{DynamicResource PrimaryTextBrush}" Margin="0,0,0,12"/>

                            <!-- Selection Status -->
                            <Border x:Name="AppCommander_SelectionModeIndicator" 
                                BorderThickness="1" 
                                CornerRadius="4" Padding="8" Margin="0,0,0,12" Visibility="Collapsed">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="🎯" Margin="0,0,6,0"/>
                                    <TextBlock x:Name="AppCommander_TxtSelectionMode" Text="Click Selection Active" 
                                            FontWeight="SemiBold" Foreground="#8A6914"/>
                                </StackPanel>
                            </Border>

                            <!-- Target Details -->
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <TextBlock Grid.Row="0" Grid.Column="0" Text="Window:" AutomationProperties.Name="Window"
                                        FontWeight="SemiBold" Margin="0,0,8,4" Foreground="{DynamicResource PrimaryTextBrush}"/>
                                <TextBlock x:Name="AppCommander_LblTargetWindow" Grid.Row="0" Grid.Column="1" 
                                        Text="No target selected" Foreground="#605E5C" 
                                        TextWrapping="Wrap" Margin="0,0,0,4"/>

                                <TextBlock Grid.Row="1" Grid.Column="0" Text="Process:" AutomationProperties.Name="Process"
                                        FontWeight="SemiBold" Margin="0,0,8,4" Foreground="{DynamicResource PrimaryTextBrush}"/>
                                <TextBlock x:Name="AppCommander_TxtTargetProcess" Grid.Row="1" Grid.Column="1" 
                                        Text="-" Foreground="#605E5C" Margin="0,0,0,4"/>
                            </Grid>

                            <!-- Quick Actions -->
                            <StackPanel Orientation="Horizontal" Margin="0,12,0,0">

                                <Button x:Name="AppCommander_BtnQuickReselect" Content="🔄 Reselect" 
                                    Click="SelectTargetByClick_Click" 
                                    Style="{DynamicResource SecondaryButton}" 
                                    AutomationProperties.Name="Reselect"
                                    Height="34" Padding="8,4" Margin="0,0,8,0" FontSize="12"/>

                                <Button x:Name="AppCommander_BtnSelectTarget" Content="📋 Browse" 
                                    Click="SelectTarget_Click" 
                                    Style="{DynamicResource SecondaryButton}" 
                                    AutomationProperties.Name="Browse target"
                                    AutomationProperties.HelpText="Browse and select a target window manually"
                                    Height="34" Padding="8,4" FontSize="12"/>

                            </StackPanel>
                        </StackPanel>
                    </Border>

                    <!-- Status Card -->
                    <Border Style="{DynamicResource CardStyle}" Margin="0,0,0,16">
                        <StackPanel Margin="16">
                            <TextBlock Text="System Status" FontSize="16" FontWeight="SemiBold" 
                            Foreground="{DynamicResource PrimaryTextBrush}" Margin="0,0,0,12"/>

                            <StackPanel>
                                <StackPanel Orientation="Horizontal" Margin="0,0,0,8">
                                    <Ellipse Width="8" Height="8" Fill="#D13438" Margin="0,0,8,0" VerticalAlignment="Center"/>
                                    <TextBlock x:Name="AppCommander_LblAutoDetectionStatus" Text="Auto-Detection Inactive" 
                                    Foreground="{DynamicResource SecondaryTextBrush}" FontSize="12"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" Margin="0,0,0,8">
                                    <Ellipse Width="8" Height="8" Fill="#D13438" Margin="0,0,8,0" VerticalAlignment="Center"/>
                                    <TextBlock x:Name="AppCommander_LblUIRecordingStatus" Text="UI Scanning Inactive" 
                                    Foreground="{DynamicResource SecondaryTextBrush}" FontSize="12"/>
                                </StackPanel>
                            </StackPanel>

                            <!-- Auto Mode Toggle -->
                            <Button x:Name="AppCommander_BtnToggleAutoMode" Content="🎯 Auto Mode OFF" 
                                Click="ToggleAutomaticMode_Click" 
                                Style="{DynamicResource SecondaryButton}" 
                                AutomationProperties.Name="Auto Mode"
                                HorizontalAlignment="Stretch" Margin="0,8,0,0"/>

                            <ProgressBar x:Name="AppCommander_ProgressEnhancedRecording" Height="4" 
                                        Background="#F3F2F1" Foreground="#0078D4"
                                        IsIndeterminate="False" Visibility="Collapsed" Margin="0,8,0,0"/>
                        </StackPanel>
                    </Border>

                    <!-- Quick Actions Card -->
                    <Border Style="{DynamicResource CardStyle}" Margin="0,0,0,16">
                        <StackPanel Margin="16">
                            <TextBlock Text="Quick Actions" FontSize="16" FontWeight="SemiBold" 
                            Foreground="{DynamicResource PrimaryTextBrush}" Margin="0,0,0,12"
                                    AutomationProperties.Name="Quick Actions"/>

                            <StackPanel>
                                <Button Content="🔍 Element Inspector" Click="ElementInspector_Click" 
                                    Style="{DynamicResource SecondaryButton}" 
                                    AutomationProperties.Name="Element Inspector"
                                    HorizontalAlignment="Stretch"  Margin="0,0,0,8"/>
                                <Button Content="⚙ Settings" Click="Settings_Click" 
                                    Style="{DynamicResource SecondaryButton}" 
                                    AutomationProperties.Name="Settings"
                                    HorizontalAlignment="Stretch"  Margin="0,0,0,8"/>
                                <Button Content="📊 Debug Info" Click="ExportSequenceForDebug_Click" 
                                    Style="{DynamicResource SecondaryButton}" 
                                    AutomationProperties.Name="Debug Info"
                                    HorizontalAlignment="Stretch" />
                            </StackPanel>
                        </StackPanel>
                    </Border>

                    <!-- Element Statistics Card -->
                    <Border Style="{DynamicResource CardStyle}" Margin="0,0,0,16">
                        <StackPanel Margin="16">
                            <TextBlock Text="Element Statistics" FontSize="16" FontWeight="SemiBold" 
                                    Foreground="{DynamicResource PrimaryTextBrush}" Margin="0,0,0,12"/>

                            <ListBox x:Name="AppCommander_LstElementStats" Height="120" Background="Transparent" 
                                    BorderThickness="0" FontSize="12"
                                    AutomationProperties.Name="Element Statistics list"
                                    AutomationProperties.HelpText="List of UI elements and their usage count">
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel Margin="0,2">
                                            <TextBlock Text="{Binding ElementName}" FontWeight="SemiBold" Foreground="{DynamicResource PrimaryTextBrush}"/>
                                            <TextBlock Text="{Binding UsageCount, StringFormat=Used: \{0\} times}" 
                                                    FontSize="11" Foreground="{DynamicResource SecondaryTextBrush}"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>

                            <Button x:Name="AppCommander_BtnRefreshStats" Content="↻ Refresh Stats" Click="AutoRefreshAllUIElements_Click" 
                                Style="{DynamicResource SecondaryButton}" 
                                AutomationProperties.Name="Refresh Stats"
                                HorizontalAlignment="Stretch" Margin="0,8,0,0"/>
                        </StackPanel>
                    </Border>
                </StackPanel>
            </ScrollViewer>
        </Grid>

        <Border Background="Transparent"  Grid.Row="3" >
            <TextBlock Text="Bottom – The area below the main content"   Visibility="Collapsed"  
                    AutomationProperties.Name="Bottom - Area below the Main Content" 
                    MinHeight="5" MaxHeight="15" />
        </Border>

        <!-- ================================================================================================================ -->
        <!-- Status Bar -->
        <Border Grid.Row="4" Background="{DynamicResource PanelBackgroundBrush}" BorderBrush="{DynamicResource BorderBrush}" BorderThickness="0,1,0,0" 
            Padding="16,8" AutomationProperties.Name="Status bar at the bottom">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <TextBlock x:Name="AppCommander_AppCommander_TxtStatusBar" Grid.Column="0" 
                Text="Ready" FontWeight="SemiBold" Foreground="{DynamicResource AccentTextBrush}"/>
                <TextBlock x:Name="AppCommander_TxtTarget" Grid.Column="1" 
                Text="No target selected" Foreground="{DynamicResource SecondaryTextBrush}" 
                Margin="16,0"/>
                <TextBlock x:Name="AppCommander_LblStatusBarRecording" Grid.Column="2" 
                        Text="Not Recording" Foreground="{DynamicResource SecondaryTextBrush}" 
                        AutomationProperties.LiveSetting="Assertive"
                        AutomationProperties.Name="Recording Status" />
            </Grid>
        </Border>
    </Grid>
</Window>