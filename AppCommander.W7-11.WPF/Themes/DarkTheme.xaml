<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Dark Theme Color Palette -->
    <Color x:Key="PrimaryColor">#569CD6</Color>
    <Color x:Key="SecondaryColor">#4A86BA</Color>
    <Color x:Key="AccentColor">#3A86BA</Color>

    <!-- Background Colors -->
    <Color x:Key="WindowBackgroundColor">#41464f</Color>
    <Color x:Key="PanelBackgroundColor">#293a59</Color>
    <Color x:Key="CardBackgroundColor">#354769</Color>
    <Color x:Key="HoverBackgroundColor">#37373D</Color>

    <!-- Text Colors -->
    <Color x:Key="PrimaryTextColor">#FFFFFF</Color>
    <Color x:Key="SecondaryTextColor">#CCCCCC</Color>
    <Color x:Key="AccentTextColor">#569CD6</Color>
    <Color x:Key="DisabledTextColor">#6D6D6D</Color>

    <!-- Border Colors -->
    <Color x:Key="BorderColor">#2b2b30</Color>
    <Color x:Key="FocusBorderColor">#569CD6</Color>
    <Color x:Key="HoverBorderColor">#5A5A5A</Color>

    <!-- Status Colors -->
    <Color x:Key="SuccessColor">#4EC9B0</Color>
    <Color x:Key="WarningColor">#FFCC02</Color>
    <Color x:Key="ErrorColor">#F14C4C</Color>
    <Color x:Key="InfoColor">#569CD6</Color>

    <!-- Shadows definitions -->
    <DropShadowEffect x:Key="ElevationLow" 
                      BlurRadius="7" 
                      ShadowDepth="7" 
                      Opacity="0.15" 
                      Color="#FF000000"/>

    <DropShadowEffect x:Key="ElevationMedium" 
                      BlurRadius="8" 
                      ShadowDepth="4" 
                      Opacity="0.25" 
                      Color="#FF000000"/>

    <!-- Colors used in all themes -->
    <SolidColorBrush x:Key="Background" Color="{DynamicResource WindowBackgroundColor}"/>
    <SolidColorBrush x:Key="Surface" Color="{DynamicResource CardBackgroundColor}"/>
    <SolidColorBrush x:Key="OnSurface" Color="{DynamicResource PrimaryTextColor}"/>

    <!-- Brushes -->
    <SolidColorBrush x:Key="PrimaryBrush" Color="{DynamicResource PrimaryColor}"/>
    <SolidColorBrush x:Key="SecondaryBrush" Color="{DynamicResource SecondaryColor}"/>
    <SolidColorBrush x:Key="AccentBrush" Color="{DynamicResource AccentColor}"/>

    <SolidColorBrush x:Key="WindowBackgroundBrush" Color="{DynamicResource WindowBackgroundColor}"/>
    <SolidColorBrush x:Key="PanelBackgroundBrush" Color="{DynamicResource PanelBackgroundColor}"/>
    <SolidColorBrush x:Key="CardBackgroundBrush" Color="{DynamicResource CardBackgroundColor}"/>
    <SolidColorBrush x:Key="HoverBackgroundBrush" Color="{DynamicResource HoverBackgroundColor}"/>

    <SolidColorBrush x:Key="PrimaryTextBrush" Color="{DynamicResource PrimaryTextColor}"/>
    <SolidColorBrush x:Key="SecondaryTextBrush" Color="{DynamicResource SecondaryTextColor}"/>
    <SolidColorBrush x:Key="AccentTextBrush" Color="{DynamicResource AccentTextColor}"/>
    <SolidColorBrush x:Key="DisabledTextBrush" Color="{DynamicResource DisabledTextColor}"/>

    <SolidColorBrush x:Key="BorderBrush" Color="{DynamicResource BorderColor}"/>
    <SolidColorBrush x:Key="FocusBorderBrush" Color="{DynamicResource FocusBorderColor}"/>
    <SolidColorBrush x:Key="HoverBorderBrush" Color="{DynamicResource HoverBorderColor}"/>

    <SolidColorBrush x:Key="SuccessBrush" Color="{DynamicResource SuccessColor}"/>
    <SolidColorBrush x:Key="WarningBrush" Color="{DynamicResource WarningColor}"/>
    <SolidColorBrush x:Key="ErrorBrush" Color="{DynamicResource ErrorColor}"/>
    <SolidColorBrush x:Key="InfoBrush" Color="{DynamicResource InfoColor}"/>

    <!-- Button Styles -->
    <Style x:Key="PrimaryButton" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource PrimaryBrush}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}"/>
        <Setter Property="BorderThickness" Value="3"/>
        <Setter Property="Padding" Value="16,8"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="MaxHeight" Value="40"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="Transparent"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4"
                            SnapsToDevicePixels="True">
                        <ContentPresenter x:Name="contentPresenter"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource SecondaryBrush}"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource SecondaryBrush}"/>
                            <Setter TargetName="border" Property="BorderThickness" Value="3"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#3A73A0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource DisabledTextBrush}"/>
                            <Setter Property="Foreground" Value="#808080"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SecondaryButton" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource PrimaryBrush}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}"/>
        <Setter Property="BorderThickness" Value="3"/>
        <Setter Property="Padding" Value="16,8"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="MaxHeight" Value="40"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="Transparent"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="4"
                        SnapsToDevicePixels="True">
                        <ContentPresenter x:Name="contentPresenter"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      Margin="{TemplateBinding Padding}"
                                      RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource SecondaryBrush}"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource SecondaryBrush}"/>
                            <Setter TargetName="border" Property="BorderThickness" Value="3"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#3A73A0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource DisabledTextBrush}"/>
                            <Setter Property="Foreground" Value="#808080"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DangerButton" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource ErrorBrush}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="3"/>
        <Setter Property="Padding" Value="16,0"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="MaxHeight" Value="40"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="5"
                                SnapsToDevicePixels="True">
                        <ContentPresenter x:Name="contentPresenter"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Margin="{TemplateBinding Padding}"
                                              RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#E13D42"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="#E13D42"/>
                            <Setter TargetName="border" Property="BorderThickness" Value="3"/>
                            <Setter TargetName="border" Property="CornerRadius" Value="2"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#CC2E33"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Card Style -->
    <Style x:Key="CardStyle" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource CardBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="6"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="#000000" BlurRadius="6" ShadowDepth="3" Opacity="0.4"/>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TextBox Style -->
    <Style x:Key="TextBoxStyle" TargetType="TextBox">
        <Setter Property="Background" Value="{DynamicResource CardBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="8,6"/>
        <Setter Property="CaretBrush" Value="{DynamicResource PrimaryTextBrush}"/>
        <Setter Property="SelectionBrush" Value="{DynamicResource PrimaryBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="2"
                            SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost"
                                      Focusable="False"
                                      HorizontalScrollBarVisibility="Hidden"
                                      VerticalScrollBarVisibility="Hidden"
                                      Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource HoverBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource FocusBorderBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- DataGrid Style -->
    <Style x:Key="DataGridStyle" TargetType="DataGrid">
        <Setter Property="Background" Value="{DynamicResource NeutralGray700}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="RowBackground" Value="{DynamicResource CardBackgroundBrush}"/>
        <Setter Property="AlternatingRowBackground" Value="{DynamicResource PanelBackgroundBrush}"/>
        <Setter Property="GridLinesVisibility" Value="Horizontal"/>
        <Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="HeadersVisibility" Value="Column"/>
        <Setter Property="Width" Value="Auto"/>
    </Style>

    <!-- Štýl pre riadky -->
    <Style TargetType="DataGridRow">
        <Setter Property="Background" Value="{DynamicResource CardBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="0,0,0,1"/>
        <Style.Triggers>
            <!-- Alternujúca farba pre párne riadky -->
            <Trigger Property="AlternationIndex" Value="1">
                <Setter Property="Background" Value="{DynamicResource PanelBackgroundBrush}"/>
            </Trigger>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource AccentBrush}"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource PrimaryBrush}"/>
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Štýl pre header -->
    <Style TargetType="DataGridColumnHeader">
        <Setter Property="Background" Value="{DynamicResource PanelBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="0,0,1,1"/>
        <Setter Property="Padding" Value="8,6"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource GrayBlueColor}"/>
                <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource HoverBackgroundBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource NeutralGray500}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--=======================================-->
    <!--            TopLevelMenuItem           -->
    <!--=======================================-->
    <Style x:Key="TopLevelMenuItem" TargetType="MenuItem">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Padding" Value="12,8"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="MenuItem">
                    <Border x:Name="templateRoot" 
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="5"
                            SnapsToDevicePixels="true">
                        <Grid x:Name="Grid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <ContentPresenter x:Name="Icon" 
                                ContentSource="Icon" 
                                HorizontalAlignment="Center" 
                                Height="16" 
                                Margin="3" 
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                VerticalAlignment="Center" 
                                Width="16"/>

                            <ContentPresenter x:Name="menuHeaderContainer" 
                                Grid.Column="1" 
                                ContentSource="Header" 
                                TextElement.Foreground="{TemplateBinding Foreground}"
                                HorizontalAlignment="Left" 
                                Margin="{TemplateBinding Padding}" 
                                RecognizesAccessKey="true" 
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                VerticalAlignment="Center"/>

                            <Popup x:Name="PART_Popup" 
                                AllowsTransparency="true" 
                                Focusable="false" 
                                IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" 
                                PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" 
                                Placement="Bottom" 
                                PlacementTarget="{Binding ElementName=templateRoot}">

                                <Border x:Name="SubMenuBorder" 
                                    Background="{DynamicResource CardBackgroundBrush}" 
                                    BorderBrush="{DynamicResource BorderBrush}" 
                                    BorderThickness="1" 
                                    CornerRadius="5"
                                    Effect="{DynamicResource ElevationMedium}"
                                    Padding="2">

                                    <ScrollViewer x:Name="SubMenuScrollViewer" 
                                        Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, 
                                        TypeInTargetAssembly={x:Type FrameworkElement}}}">

                                        <Grid x:Name="Grid1" RenderOptions.ClearTypeHint="Enabled">
                                            <Canvas x:Name="Canvas" 
                                                    HorizontalAlignment="Left" 
                                                    Height="0" 
                                                    VerticalAlignment="Top" 
                                                    Width="0">
                                                <Rectangle x:Name="OpaqueRect" 
                                                    Fill="{Binding Background, ElementName=SubMenuBorder}" 
                                                    Height="{Binding ActualHeight, ElementName=SubMenuBorder}" 
                                                    Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
                                            </Canvas>                                            

                                            <ItemsPresenter x:Name="ItemsPresenter" 
                                                    KeyboardNavigation.DirectionalNavigation="Cycle" 
                                                    Grid.IsSharedSizeScope="true" 
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                                    KeyboardNavigation.TabNavigation="Cycle"/>
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                            <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
                        </Trigger>
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                        </Trigger>

                        <!-- Dark Theme Hover efekt -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="templateRoot" Value="{DynamicResource HoverBackgroundBrush}"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{DynamicResource HoverBorderBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
                        </Trigger>

                        <!-- Pressed efekt -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="templateRoot" Value="{DynamicResource PrimaryBrush}"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{DynamicResource PrimaryBrush}"/>
                            <Setter Property="Foreground" Value="Black"/>
                        </Trigger>

                        <!-- Ak je submenu otvorené -->
                        <Trigger Property="IsSubmenuOpen" Value="True">
                            <Setter Property="Background" TargetName="templateRoot" Value="{DynamicResource HoverBackgroundBrush}"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{DynamicResource HoverBorderBrush}"/>
                        </Trigger>

                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter Property="Background" TargetName="templateRoot" Value="{DynamicResource HoverBackgroundBrush}"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{DynamicResource HoverBorderBrush}"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledTextBrush}"/>
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsHighlighted" Value="True"/>
                                <Condition Property="IsEnabled" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="Transparent"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="Transparent"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MenuItemStyle" TargetType="MenuItem">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="16,6"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="MenuItem">
                    <Border x:Name="templateRoot"
                        Background="{TemplateBinding Background}"
                        BorderBrush="Transparent"
                        BorderThickness="1"
                        CornerRadius="4"
                        Opacity="0.7"
                        SnapsToDevicePixels="True">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <!-- Icon/Checkmark Column -->
                            <ContentPresenter x:Name="Icon"
                                        Grid.Column="0"
                                        ContentSource="Icon"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Width="16"
                                        Height="16"
                                        Margin="8,0,8,0"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>

                            <Border x:Name="GlyphPanel"
                                Grid.Column="0"
                                Width="16"
                                Height="16"
                                Margin="8,0,8,0"
                                Visibility="Collapsed"
                                Background="Transparent"
                                BorderThickness="0">
                                <Path x:Name="Glyph"
                                  Data="M0,5.5 L1.5,7 L4.5,4"
                                  Stroke="{DynamicResource PrimaryTextBrush}"
                                  StrokeThickness="2"
                                  VerticalAlignment="Center"
                                  HorizontalAlignment="Center"/>
                            </Border>

                            <!-- Header Text -->
                            <ContentPresenter x:Name="menuHeaderContainer"
                                        Grid.Column="1"
                                        ContentSource="Header"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Center"
                                        Margin="{TemplateBinding Padding}"
                                        RecognizesAccessKey="True"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>

                            <!-- Input Gesture Text (Skratka) -->
                            <TextBlock x:Name="InputGestureText"
                                   Grid.Column="2"
                                   Text="{TemplateBinding InputGestureText}"
                                   Foreground="{DynamicResource SecondaryTextBrush}"
                                   VerticalAlignment="Center"
                                   Margin="16,0,8,0"/>

                            <!-- Submenu Arrow -->
                            <Path x:Name="SubMenuArrow"
                              Grid.Column="3"
                              Data="M0,0 L4,4 L0,8"
                              Stroke="{DynamicResource PrimaryTextBrush}"
                              StrokeThickness="1"
                              VerticalAlignment="Center"
                              Margin="8,0,8,0"
                              Visibility="Collapsed"/>

                            <!-- Submenu Popup -->
                            <Popup x:Name="PART_Popup"
                               AllowsTransparency="True"
                               Focusable="False"
                               IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                               PopupAnimation="Fade"
                               Placement="Right"
                               HorizontalOffset="-2"
                               VerticalOffset="-3">
                                <Border x:Name="SubMenuBorder"
                                    Background="{DynamicResource CardBackgroundBrush}"
                                    BorderBrush="{DynamicResource BorderBrush}"
                                    BorderThickness="1"
                                    CornerRadius="5"
                                    Effect="{DynamicResource ElevationMedium}"
                                    Padding="2">
                                    <ScrollViewer Style="{DynamicResource {ComponentResourceKey 
                                              ResourceId=MenuScrollViewer, 
                                              TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle"
                                                  KeyboardNavigation.TabNavigation="Cycle"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <!-- Zobrazenie ikon -->
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
                        </Trigger>

                        <!-- Checkable MenuItem -->
                        <Trigger Property="IsCheckable" Value="True">
                            <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
                        </Trigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Glyph" Property="Visibility" Value="Visible"/>
                        </Trigger>

                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="Glyph" Property="Visibility" Value="Collapsed"/>
                        </Trigger>

                        <!-- Submenu šípka -->
                        <Trigger Property="Role" Value="SubmenuHeader">
                            <Setter TargetName="SubMenuArrow" Property="Visibility" Value="Visible"/>
                        </Trigger>

                        <!-- IsHighlighted efekt s corner radius a opacity -->
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter TargetName="templateRoot" Property="Background" Value="#FF0078D7"/>
                            <Setter TargetName="templateRoot" Property="Opacity" Value="1"/>
                            <Setter Property="Foreground" Value="White"/>
                            <Setter TargetName="InputGestureText" Property="Foreground" Value="White"/>
                            <Setter TargetName="Glyph" Property="Stroke" Value="White"/>
                            <Setter TargetName="SubMenuArrow" Property="Stroke" Value="White"/>
                        </Trigger>

                        <!-- Disabled stav -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledTextBrush}"/>
                            <Setter TargetName="InputGestureText" Property="Foreground" Value="{DynamicResource DisabledTextBrush}"/>
                            <Setter TargetName="Glyph" Property="Stroke" Value="{DynamicResource DisabledTextBrush}"/>
                        </Trigger>

                        <!-- Popup animation -->
                        <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                            <Setter TargetName="PART_Popup" Property="PopupAnimation" Value="None"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- CheckBox Style -->
    <Style TargetType="CheckBox">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
        <Setter Property="Background" Value="Transparent"/>
    </Style>

    <!-- Panel/Toolbar Styles -->
    <Style x:Key="PanelStyle" TargetType="Panel">
        <Setter Property="Background" Value="{DynamicResource PanelBackgroundBrush}"/>
    </Style>

    <Style x:Key="ToolbarStyle" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource SuccessGreen}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="0,0,0,1"/>
    </Style>

    <!-- Status Card Style -->
    <Style x:Key="StatusCardStyle" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource CardBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="4"/>
        <Setter Property="Padding" Value="12"/>
        <Setter Property="Margin" Value="4"/>
    </Style>


    <!-- ======================================= -->
    <!--           SCROLLVIEWER STYLE            -->
    <!-- ======================================= -->

    <Style x:Key="ScrollViewerStyle" TargetType="ScrollViewer">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="HorizontalScrollBarVisibility" Value="Auto"/>
    </Style>

    <!-- ======================================= -->
    <!--     SCROLLBAR STYLE  -  DARK THEME      -->
    <!-- ======================================= -->

    <!-- Thumb (jazdec) -->
    <Style x:Key="ScrollBarThumb" TargetType="Thumb">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Border x:Name="ThumbBorder"
                        CornerRadius="5"
                        Margin="2"
                        Opacity="0.75">
                        <Border.Background>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                <GradientStop Color="{DynamicResource SecondaryColor}" Offset="0.0"/>
                                <GradientStop Color="{DynamicResource SecondaryColor}" Offset="1.0"/>
                            </LinearGradientBrush>
                        </Border.Background>
                        <Border.Effect>
                            <DropShadowEffect BlurRadius="5" ShadowDepth="0" Opacity="0.3"/>
                        </Border.Effect>
                    </Border>

                    <ControlTemplate.Triggers>

                        <!-- Hover animácia -->
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="ThumbBorder"
                                                Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)"
                                                To="{StaticResource PrimaryColor}"
                                                Duration="0:0:0.25"/>
                                    <ColorAnimation Storyboard.TargetName="ThumbBorder"
                                                Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                To="{StaticResource PrimaryColor}"
                                                Duration="0:0:0.25"/>
                                    <DoubleAnimation Storyboard.TargetName="ThumbBorder"
                                                 Storyboard.TargetProperty="Opacity"
                                                 To="1"
                                                 Duration="0:0:0.25"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <!-- Opustenie hover -->
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="ThumbBorder"
                                                Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)"
                                                To="{StaticResource SecondaryColor}"
                                                Duration="0:0:0.3"/>
                                    <ColorAnimation Storyboard.TargetName="ThumbBorder"
                                                Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                To="{StaticResource SecondaryColor}"
                                                Duration="0:0:0.3"/>
                                    <DoubleAnimation Storyboard.TargetName="ThumbBorder"
                                                 Storyboard.TargetProperty="Opacity"
                                                 To="0.75"
                                                 Duration="0:0:0.3"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <!-- Počas ťahania -->
                        <Trigger Property="IsDragging" Value="True">
                            <Setter TargetName="ThumbBorder" Property="Opacity" Value="1"/>
                            <Setter TargetName="ThumbBorder" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource AccentColor}"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <!-- Vertikálny ScrollBar -->
                        <DataTrigger Binding="{Binding Orientation, RelativeSource={RelativeSource TemplatedParent}}" Value="Vertical">
                            <Setter TargetName="ThumbBorder" Property="Width" Value="12"/>
                            <Setter TargetName="ThumbBorder" Property="Height" Value="Auto"/>
                        </DataTrigger>

                        <!-- Horizontálny ScrollBar -->
                        <DataTrigger Binding="{Binding Orientation, RelativeSource={RelativeSource TemplatedParent}}" Value="Horizontal">
                            <Setter TargetName="ThumbBorder" Property="Height" Value="12"/>
                            <Setter TargetName="ThumbBorder" Property="Width" Value="Auto"/>
                        </DataTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ScrollBar (vertikálny + horizontálny) -->
    <Style TargetType="ScrollBar">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Width" Value="16"/>
        <Setter Property="MinWidth" Value="16"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>

        <!-- Default (vertikálny) -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollBar">
                    <Grid>
                        <Border Background="{TemplateBinding Background}"
                            CornerRadius="4"
                            Margin="2"/>

                        <Track x:Name="PART_Track" IsDirectionReversed="True">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="ScrollBar.PageUpCommand"
                                          Opacity="0"
                                          Focusable="False"/>
                            </Track.DecreaseRepeatButton>

                            <Track.Thumb>
                                <Thumb Style="{DynamicResource ScrollBarThumb}"/>
                            </Track.Thumb>

                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="ScrollBar.PageDownCommand"
                                          Opacity="0"
                                          Focusable="False"/>
                            </Track.IncreaseRepeatButton>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <!-- Horizontálny -->
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Height" Value="16"/>
                <Setter Property="MinHeight" Value="16"/>
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ScrollBar">
                            <Grid>
                                <Border Background="{TemplateBinding Background}"
                                    CornerRadius="4"
                                    Margin="2"/>

                                <Track x:Name="PART_Track" IsDirectionReversed="False">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="ScrollBar.PageLeftCommand"
                                                  Opacity="0"
                                                  Focusable="False"/>
                                    </Track.DecreaseRepeatButton>

                                    <Track.Thumb>
                                        <Thumb Style="{DynamicResource ScrollBarThumb}"/>
                                    </Track.Thumb>

                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="ScrollBar.PageRightCommand"
                                                  Opacity="0"
                                                  Focusable="False"/>
                                    </Track.IncreaseRepeatButton>
                                </Track>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>



    <!-- ======================================= -->
    <!-- GROUPBOX STYLE -->
    <!-- ======================================= -->
    <Style x:Key="GroupBoxStyle" TargetType="GroupBox">
        <Setter Property="Background" Value="{DynamicResource CardBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Padding" Value="12"/>
        <Setter Property="Margin" Value="0,8"/>
    </Style>

    <!-- ======================================= -->
    <!-- LABEL & TEXTBLOCK STYLES -->
    <!-- ======================================= -->

    <Style x:Key="LabelStyle" TargetType="Label">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
        <Setter Property="FontSize" Value="14"/>
    </Style>

    <Style x:Key="TextBlockStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
        <Setter Property="FontSize" Value="14"/>
    </Style>

    <!-- ======================================= -->
    <!-- STATUSBAR STYLE -->
    <!-- ======================================= -->

    <Style x:Key="StatusBarStyle" TargetType="StatusBar">
        <Setter Property="Background" Value="{DynamicResource PanelBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="0,1,0,0"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Padding" Value="8,4"/>
    </Style>

</ResourceDictionary>